import java.util.ArrayList;

//Accounts super class- abstract 
public abstract class Account {
	//private data members
	private int number; 
	private String owner; 
	private double balance;
	
	//**********************
	//Constructor 
	public Account(int n, String o, double b) {
		number = n; 
		owner = o;
		balance = b; 
	}
	
	//******************************
	//Validate method: validate if the request is from a legitimate owner of the account
    public boolean validateOwner(ArrayList<Account> accounts, int acctNumber, String realOwner, String owner) {
		for(int i = 0; i < accounts.size(); i++) {
			if(acctNumber == accounts.get(i).getNumber()) {
				if(realOwner.equals(owner)) {
					return true; 
				}
			}
		}
		return false; 
	}
	
    
	//***********************************
	//printAccounts: print out the number, owner, balance
	public abstract String printAccount(); 
	
	//***********************************
	//Withdraw method
	public abstract void withdraw(ArrayList<Account> accounts, String owner, double amt); 
	
	//***********************************
	//Deposit method
	public abstract void deposit(ArrayList<Account> accounts, double amt); 
	
	//***********************************
	//Transfer methods
	public abstract void transferFrom(ArrayList<Account> accounts, String owner, double amt);
	public abstract void transferTo(ArrayList<Account> accounts, String owner, Account a, double amt); 
	
	//***********************************
	//Close method
	public abstract void close(ArrayList<Account> accounts, String owner);

	
	//************************************
	//Getters and Setters
	public int getNumber() {
		return number;
	}
	public void setNumber(int number) {
		this.number = number;
	}
	public String getOwner() {
		return owner;
	}
	public void setOwner(String owner) {
		this.owner = owner;
	}
	public double getBalance() {
		return balance;
	}
	public void setBalance(double balance) {
		this.balance = balance;
	}


	
}
